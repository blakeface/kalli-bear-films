{"version":3,"sources":["webpack:///./components/Contact.jsx"],"names":["reducer","state","name","value","checked","type","Checkbox","props","options","map","val","class","aria-labelledby","id","TextArea","fields","label","autoComplete","required","initialState","reduce","acc","length","forEach","option","Contact","onChange","e","dispatch","target","useReducer","handleSubmit","useCallback","preventDefault","href","rel","src","alt","onSubmit","f","for","role"],"mappings":"s/BAgCA,SAASA,EAAQC,GAAO,KAAEC,EAAF,MAAQC,EAAR,QAAeC,EAAf,KAAwBC,IAC9C,cACKJ,GACU,aAATI,EAAsB,CAAE,CAACF,GAAQC,GAAY,CAAE,CAACF,GAAOC,IAkB/D,SAASG,EAASC,GAChB,OAAOA,EAAMC,QAAQC,IAAIC,GAErB,SAAKC,MAAM,YACT,aACEN,KAAK,WACLH,KAAMK,EAAML,KACZC,MAAOO,EACPE,kBAAkB,GAAEL,EAAML,QAAQQ,KAC9BH,IAEN,WAAOM,GAAIH,GAAMA,KAKzB,SAASI,EAASP,GAChB,OACE,gBAAUM,GAAIN,EAAML,MAAUK,GAC3BA,EAAMJ,O,4BArEb,MAAMY,EAAS,CACb,CAAEC,MAAO,OAAQC,aAAc,OAAQC,UAAU,GACjD,CAAEF,MAAO,QAASX,KAAM,QAASY,aAAc,QAASC,UAAU,GAClE,CAAEF,MAAO,QAASC,aAAc,MAAOZ,KAAM,UAC7C,CACEW,MAAO,0CACPX,KAAM,WACNG,QAAS,CAAC,gBAAiB,kBAAmB,gBAAiB,UAEjE,CAAEQ,MAAO,uBAAwBX,KAAM,QACvC,CAAEW,MAAO,uBAAwBX,KAAM,UACvC,CACEW,MAAO,qCACPX,KAAM,WACNG,QAAS,CACP,gBACA,mBACA,6BACA,mBACA,yBACA,gBAGJ,CACEQ,MAAO,qDACPX,KAAM,aAWJc,EAAeC,iBACnBL,EACA,CAACM,GAAOL,QAAOR,UAAU,OACnBA,EAAQc,OACVd,EAAQe,QAAQC,GAAWH,EAAIG,IAAU,GAEzCH,EAAIL,GAAS,GAGRK,GAET,IA6GaI,UAlFf,WAOE,SAASC,EAASC,GAChBC,EAASD,EAAEE,QAPb,MAAO5B,EAAO2B,GAAYE,YAAW9B,EAASmB,GAExCY,EAAeC,YAAYL,IAC/BA,EAAEM,kBACD,IAMH,OACE,aAAStB,MAAM,WACb,gBACE,oBACE,SAAKA,MAAM,gBACT,2BACA,mCACA,OACEuB,KAAK,oCACLL,OAAO,SACPM,IAAI,uBAHN,8BAOA,OAAGD,KAAK,kBAAR,oBAGJ,SAAKvB,MAAM,eACT,SACEyB,IAAI,0CACJC,IAAI,2BAKV,iBACE,yCACA,0CAGF,UAAMC,SAAUP,GACbhB,EAAON,IAAI8B,GAER,SAAK5B,MAAM,WACT,WAAO6B,IAAKD,EAAEvB,OAAQuB,EAAEvB,OAEZ,aAAXuB,EAAElC,KACD,EAACC,EAAD,KAAciC,EAAd,CAAiBrC,KAAMqC,EAAEvB,MAAOU,SAAUA,KAC7B,aAAXa,EAAElC,KACJ,EAACS,EAAD,KACMyB,EADN,CAEErC,KAAMqC,EAAEvB,MACRU,SAAUA,EACVvB,MAAOF,EAAMC,SAGf,WACEW,GAAI0B,EAAEvB,MACNd,KAAMqC,EAAEvB,MACRX,KAAK,OACLY,aAAcsB,EAAEtB,cAAgB,KAChCS,SAAUA,EACVvB,MAAOF,EAAMC,UAMvB,SAAKS,MAAM,UACT,WACEN,KAAK,SACLoC,KAAK,SACLtC,MAAM,SACNQ,MAAM,sB","file":"5.chunk.4579f.esm.js","sourcesContent":["import { useCallback, useReducer } from \"preact/hooks\";\nimport { reduce } from \"lodash\";\n\nconst fields = [\n  { label: \"Name\", autoComplete: \"name\", required: true },\n  { label: \"Email\", type: \"email\", autoComplete: \"email\", required: true },\n  { label: \"Phone\", autoComplete: \"tel\", type: \"number\" },\n  {\n    label: \"What type of video are you looking for?\",\n    type: \"checkbox\",\n    options: [\"Wedding Video\", \"Elopement Video\", \"Save the Date\", \"Other\"],\n  },\n  { label: \"Event / Project Date\", type: \"date\" },\n  { label: \"Estimate Guess Count\", type: \"number\" },\n  {\n    label: \"Are you interested in any add ons?\",\n    type: \"checkbox\",\n    options: [\n      \"Drone Footage\",\n      \"Instagram Teaser\",\n      \"Additional Cinematographer\",\n      \"Additional Hours\",\n      \"Mini Documentary Story\",\n      \"RAW footage\",\n    ],\n  },\n  {\n    label: \"If there is anything specific, please let me know!\",\n    type: \"textarea\",\n  },\n];\n\nfunction reducer(state, { name, value, checked, type }) {\n  return {\n    ...state,\n    ...(type === \"checkbox\" ? { [value]: checked } : { [name]: value }),\n  };\n}\n\nconst initialState = reduce(\n  fields,\n  (acc, { label, options = [] }) => {\n    if (options.length) {\n      options.forEach(option => (acc[option] = false));\n    } else {\n      acc[label] = \"\";\n    }\n\n    return acc;\n  },\n  {}\n);\n\nfunction Checkbox(props) {\n  return props.options.map(val => {\n    return (\n      <div class=\"checkbox\">\n        <input\n          type=\"checkbox\"\n          name={props.name}\n          value={val}\n          aria-labelledby={`${props.name} ${val}`}\n          {...props}\n        />\n        <label id={val}>{val}</label>\n      </div>\n    );\n  });\n}\nfunction TextArea(props) {\n  return (\n    <textarea id={props.name} {...props}>\n      {props.value}\n    </textarea>\n  );\n}\n\nfunction Contact() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n  }, []);\n\n  function onChange(e) {\n    dispatch(e.target);\n  }\n\n  return (\n    <section class=\"contact\">\n      <figure>\n        <figcaption>\n          <div class=\"text-wrapper\">\n            <h2>Let's chat!</h2>\n            <p>You can reach me at:</p>\n            <a\n              href=\"mailto:andreas@kallibearfilms.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              andreas@kallibearfilms.com\n            </a>\n            <a href=\"tel:9703430980\">(970) 343-0980</a>\n          </div>\n        </figcaption>\n        <div class=\"img-wrapper\">\n          <img\n            src=\"/assets/images/unsplash/pond-couple.jpg\"\n            alt=\"Newly weds by a pont\"\n          />\n        </div>\n      </figure>\n\n      <article>\n        <h2>Or I can reach out to you</h2>\n        <p>But first a couple details</p>\n      </article>\n\n      <form onSubmit={handleSubmit}>\n        {fields.map(f => {\n          return (\n            <div class=\"control\">\n              <label for={f.label}>{f.label}</label>\n\n              {f.type === \"checkbox\" ? (\n                <Checkbox {...f} name={f.label} onChange={onChange} />\n              ) : f.type === \"textarea\" ? (\n                <TextArea\n                  {...f}\n                  name={f.label}\n                  onChange={onChange}\n                  value={state[name]}\n                />\n              ) : (\n                <input\n                  id={f.label}\n                  name={f.label}\n                  type=\"text\"\n                  autoComplete={f.autoComplete || \"on\"}\n                  onChange={onChange}\n                  value={state[name]}\n                />\n              )}\n            </div>\n          );\n        })}\n        <div class=\"action\">\n          <input\n            type=\"submit\"\n            role=\"button\"\n            value=\"Submit\"\n            class=\"slide-button\"\n          />\n        </div>\n      </form>\n    </section>\n  );\n}\n\nexport default Contact;\n"],"sourceRoot":""}